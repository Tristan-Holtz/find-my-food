{"version":3,"sources":["RestaurantRow/RestaurantRow.js","actions/index.js","FilterMenu/FilterMenu.js","RestaurantContainer/RestaurantContainer.js","App/App.js","serviceWorker.js","reducers/restaurantReducer.js","reducers/pageReducer.js","reducers/currentPageReducer.js","reducers/index.js","index.js"],"names":["RestaurantRow","state","this","props","info","genre","name","city","telephone","address1","id","splitGenres","split","key","className","join","Component","searchRestaurants","search","type","changeCurrentPage","page","changeSelection","places","FilterMenu","originalRestaurants","restaurants","componentDidUpdate","resetRestaurants","filterRestaurants","e","preventDefault","results","filter","res","toLowerCase","includes","newPages","makePages","length","handleChange","event","setState","target","value","restaurantList","map","currentSelection","push","slice","placeholder","onChange","onClick","connect","dispatch","reset","RestaurantContainer","viewingPages","currentPage","pageNumber","componentDidMount","fetch","headers","Authorization","then","response","json","getRestaurantList","catch","error","console","log","sortedList","sort","a","b","toUpperCase","changePage","number","currentPages","style","display","gridTemplateColumns","App","Boolean","window","location","hostname","match","restaurantReducer","action","pageReducer","currentPageReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8001d4c9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./RestaurantRow.css\";\nexport class RestaurantRow extends Component {\n  state = {};\n\n  render() {\n    const {\n      genre,\n      name,\n      city,\n      state,\n      telephone,\n      address1,\n      id,\n    } = this.props.info;\n    const splitGenres = genre.split(\",\");\n    return (\n      <section key={id} className=\"restaurant-row\">\n        <div className=\"row_div-right\">\n          <h2>{name}</h2>\n          <p>\n            <b>Phone Number:</b> {telephone}\n          </p>\n          <p>\n            <b>Cuisine:</b> {splitGenres.join(\", \")}\n          </p>\n        </div>\n        <div className=\"row_div-left\">\n          <p>{address1}</p>\n          <p>\n            {city}, {state}\n          </p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default RestaurantRow;\n","export const searchRestaurants = (search) => ({\n  type: \"SEARCH_RESTAURANTS\",\n  search,\n});\n\nexport const resetRestaurants = (reset) => ({\n  type: \"RESET_RESTAURANTS\",\n  reset,\n});\n\nexport const changeCurrentPage = (page) => ({\n  type: \"CHANGE_PAGE\",\n  page,\n});\n\nexport const changeSelection = (places) => ({\n  type: \"NEW_PAGE\",\n  places,\n});\n","import React, { Component } from \"react\";\nimport {\n  searchRestaurants,\n  resetRestaurants,\n  changeCurrentPage,\n  changeSelection,\n} from \"../actions/index\";\nimport { connect } from \"react-redux\";\nimport RestaurantRow from \"../RestaurantRow/RestaurantRow.js\";\nimport \"./FilterMenu.css\";\n\nexport class FilterMenu extends Component {\n  state = {\n    originalRestaurants: [],\n    restaurants: [],\n    genre: \"\",\n    state: \"\",\n  };\n\n  componentDidUpdate = () => {\n    const { state, genre, originalRestaurants } = this.state;\n    if (genre === \"\" && state === \"\") {\n      this.props.resetRestaurants(originalRestaurants[0]);\n    } else if (genre === \"\" || state === \"\") {\n      this.filterRestaurants();\n    }\n  };\n\n  filterRestaurants = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    const { genre, state } = this.state;\n    const {\n      restaurants,\n      searchRestaurants,\n      changeCurrentPage,\n      changeSelection,\n    } = this.props;\n    let results = [];\n    if (genre) {\n      results = restaurants[0].filter((res) => {\n        return res.genre.toLowerCase().includes(genre.toLowerCase());\n      });\n    }\n    if (state) {\n      results = restaurants[0].filter((res) => {\n        return res.state.toLowerCase().includes(state.toLowerCase());\n      });\n    }\n    if (genre && state) {\n      results = restaurants[0]\n        .filter((res) => {\n          return res.genre.toLowerCase().includes(genre.toLowerCase());\n        })\n        .filter((res) => {\n          return res.state.toLowerCase().includes(state.toLowerCase());\n        });\n    }\n    const newPages = this.makePages(results);\n    searchRestaurants(results);\n    changeCurrentPage(newPages);\n    if (newPages.length < 10) {\n      changeSelection(newPages);\n    } else {\n      changeSelection(newPages[0]);\n    }\n  };\n\n  makePages(results) {\n    const restaurantList = results.map((res) => {\n      return <RestaurantRow info={res} />;\n    });\n    let currentSelection = [];\n    if (restaurantList.length > 10) {\n      currentSelection.push(restaurantList.slice(0, 10));\n      currentSelection.push(restaurantList.slice(10, 20));\n      currentSelection.push(restaurantList.slice(20, 30));\n      currentSelection.push(restaurantList.slice(30));\n      return currentSelection;\n    } else {\n      return restaurantList;\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    this.state.originalRestaurants = this.props.restaurants;\n    return (\n      <aside className=\"filter-aside\">\n        <form className=\"filter-form\">\n          <div className=\"state-div\">\n            <label>State</label>\n            <input\n              placeholder=\"CO, NY, etc..\"\n              className=\"state-input\"\n              name=\"state\"\n              onChange={this.handleChange}\n            ></input>\n          </div>\n          <div className=\"genre-div\">\n            <label>Genre</label>\n            <input\n              placeholder=\"Cafe, Steak, etc..\"\n              className=\"genre-input\"\n              name=\"genre\"\n              onChange={this.handleChange}\n            ></input>\n          </div>\n          <button\n            className=\"submit-button\"\n            type=\"submit\"\n            onClick={this.filterRestaurants}\n          >\n            F I N D\n          </button>\n        </form>\n      </aside>\n    );\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  searchRestaurants: (search) => {\n    dispatch(searchRestaurants(search));\n  },\n  resetRestaurants: (reset) => {\n    dispatch(resetRestaurants(reset));\n  },\n  changeCurrentPage: (page) => {\n    dispatch(changeCurrentPage(page));\n  },\n  changeSelection: (currentSelection) => {\n    dispatch(changeSelection(currentSelection));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(FilterMenu);\n","import React, { Component } from \"react\";\nimport RestaurantRow from \"../RestaurantRow/RestaurantRow\";\nimport \"./RestaurantContainer.css\";\nimport FilterMenu from \"../FilterMenu/FilterMenu\";\nimport { connect } from \"react-redux\";\nimport {\n  searchRestaurants,\n  changeCurrentPage,\n  changeSelection,\n} from \"../actions/index\";\n\nexport class RestaurantContainer extends Component {\n  state = {\n    restaurants: [],\n    viewingPages: [],\n    currentPage: [],\n    pageNumber: 0,\n  };\n\n  componentDidMount = () => {\n    fetch(\"https://code-challenge.spectrumtoolbox.com/api/restaurants\", {\n      headers: {\n        Authorization: \"Api-Key q3MNxtfep8Gt\",\n      },\n    })\n      .then((response) => response.json())\n      .then((restaurants) => this.getRestaurantList(restaurants))\n      .catch((error) => console.log(error));\n  };\n\n  makePages = () => {\n    const { restaurants } = this.props;\n    const restaurantList = restaurants.map((res) => {\n      return <RestaurantRow info={res} />;\n    });\n    let currentSelection = [];\n    if (restaurantList.length > 10) {\n      currentSelection.push(restaurantList.slice(0, 10));\n      currentSelection.push(restaurantList.slice(10, 20));\n      currentSelection.push(restaurantList.slice(20, 30));\n      currentSelection.push(restaurantList.slice(30));\n    }\n    this.props.changeCurrentPage(currentSelection);\n    this.props.changeSelection(currentSelection[0]);\n  };\n\n  getRestaurantList = (places) => {\n    const sortedList = places.sort((a, b) =>\n      a.name.toUpperCase() < b.name.toUpperCase() ? -1 : 1\n    );\n    this.setState({ restaurants: [sortedList] });\n    searchRestaurants(sortedList);\n    this.makePages();\n  };\n\n  changePage = (number) => {\n    const { changeSelection, currentPages } = this.props;\n    if (currentPages.length > number - 1) {\n      this.setState({ pageNumber: number });\n      changeSelection(currentPages[number]);\n    }\n  };\n\n  render() {\n    const { restaurants, currentPage, currentPages } = this.props;\n    if (restaurants.length) {\n      return (\n        <main>\n          <div className=\"header-div\">\n            <FilterMenu restaurants={this.state.restaurants} />\n            <header className=\"header\">\n              <h1>find my food</h1>\n            </header>\n          </div>\n          <section className=\"restaurant-container\">\n            <div className=\"container-top\">\n              <h3>Results:</h3>\n              <div>\n                <p>\n                  <button\n                    className=\"page-button\"\n                    onClick={() => this.changePage(0)}\n                  >\n                    1\n                  </button>\n                  <button\n                    className=\"page-button\"\n                    onClick={() => this.changePage(1)}\n                  >\n                    2\n                  </button>\n                  <button\n                    className=\"page-button\"\n                    onClick={() => this.changePage(2)}\n                  >\n                    3\n                  </button>\n                  <button\n                    className=\"page-button\"\n                    onClick={() => this.changePage(3)}\n                  >\n                    4\n                  </button>\n                </p>\n              </div>\n              <p className=\"page-display\">\n                viewing page {this.state.pageNumber + 1} of{\" \"}\n                {currentPages.length}\n              </p>\n            </div>\n            <div\n              className=\"restaurant-cards\"\n              style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}\n            >\n              {currentPage}\n            </div>\n            <p className=\"page-display_bottom\">\n              viewing page {this.state.pageNumber + 1} of {currentPages.length}\n            </p>\n          </section>\n        </main>\n      );\n    } else {\n      return (\n        <main>\n          <div className=\"header-div\">\n            <FilterMenu restaurants={this.state.restaurants} />\n            <header className=\"header\">\n              <h1>find my food</h1>\n            </header>\n          </div>\n          <section className=\"restaurant-container\">\n            <div className=\"container-top\">\n              <h3>No results found</h3>\n              <div></div>\n              <p>Try another search</p>\n            </div>\n          </section>\n        </main>\n      );\n    }\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  restaurants: state.restaurants,\n  currentPages: state.currentPages,\n  currentPage: state.currentPage,\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  searchRestaurants: (search) => {\n    dispatch(searchRestaurants(search));\n  },\n  changeCurrentPage: (page) => {\n    dispatch(changeCurrentPage(page));\n  },\n  changeSelection: (currentSelection) => {\n    dispatch(changeSelection(currentSelection));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RestaurantContainer);\n","import React from \"react\";\nimport \"./App.css\";\nimport RestaurantContainer from \"../RestaurantContainer/RestaurantContainer\";\n\nfunction App() {\n  return (\n    <main>\n      <RestaurantContainer />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const restaurantReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SEARCH_RESTAURANTS\":\n      return action.search;\n    case \"RESET_RESTAURANTS\":\n      return action.reset;\n    default:\n      return state;\n  }\n};\n\nexport default restaurantReducer;\n","const pageReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"CHANGE_PAGE\":\n      return action.page;\n    default:\n      return state;\n  }\n};\n\nexport default pageReducer;\n","const currentPageReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"NEW_PAGE\":\n      return action.places;\n    default:\n      return state;\n  }\n};\n\nexport default currentPageReducer;\n","import { combineReducers } from \"redux\";\nimport restaurantReducer from \"./restaurantReducer\";\nimport pageReducer from \"./pageReducer\";\nimport currentPageReducer from \"./currentPageReducer\";\n\nconst rootReducer = combineReducers({\n  restaurants: restaurantReducer,\n  currentPages: pageReducer,\n  currentPage: currentPageReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}